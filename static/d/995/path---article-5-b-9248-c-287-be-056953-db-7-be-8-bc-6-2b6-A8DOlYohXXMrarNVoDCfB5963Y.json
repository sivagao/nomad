{"data":{"mongodbDatabaseArticles":{"id":"5b9248c287be056953db7be8","content":"<div><p>In the last few weeks I built a Slack community around digital nomads called <a href=\"http://hashtagnomads.com/?ref=levels.io\">#nomads</a>. It now has over 1,250 members that talk to each other daily. Slack was originally meant as a team communication platform, but it functions surprisingly well at large-scale as a community platform. Slack doesn't allow people to sign up directly though. The team's admin needs to invite people manually. Today, I'll show how I combined a few services to fix that and transform Slack into a community platform.</p> <h2>Accepting new sign ups</h2> <p>As Slack doesn't support this out of the box, we need to make a way for people to sign up. Luckily <a href=\"http://ssqt.co/bEq7\">Typeform</a> is perfect for this. Users sign up by clicking <strong>Join Us</strong> on <a href=\"http://hashtagnomads.com/?ref=levels.io\">#nomads</a>'s main page:</p> <img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"/wp-content/uploads/2014/11/sitePic.png\"> <p>That button links them to <a href=\"//nomadlist.typeform.com/to/afaUYO\">this form</a>. Typeform saves all the sign ups in an spreadsheet you can download.</p> <h2>Inviting them to Slack</h2> <p>Until now every day I had to go sign in to Typeform, download all the sign ups and then go to Slack and copy-paste them into the <a href=\"//hashtagnomads.slack.com/admin/invites/full\" class=\"broken_link\">invites box</a>:</p> <img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"/wp-content/uploads/2014/11/xx.png\"> <p>This becomes a hassle though and I started getting tweets of people that weren't invited when I forgot to do it some days. I can't be on the computer all day, guys/girls! :)</p> <blockquote class=\"twitter-tweet\" lang=\"en\"> <p><a href=\"//twitter.com/nomadlist_\">@nomadlist_</a> hey guys. I recently signed up for the slack channel. I haven't received a confirmation yet. My email is damirkotoric@gmail.com</p> <p>&#8212; Damir Kotori&#196;&#8225; (@damirkotoric) <a href=\"//twitter.com/damirkotoric/status/534865107034316800\">November 19, 2014</a><br> </p></blockquote> <h2>Let's automate it</h2> <p>I would have used <a href=\"http://zapier.com/\">Zapier</a> for this, and although it appears to have a <a href=\"//zapier.com/zapbook/slack/typeform/\">Typeform &amp; Slack integration</a>, it's too limited to be of any use here. So let's do it ourselves with a simple script.</p> <h2>Getting new signups from Typeform</h2> <p>First we have to <a href=\"http://ssqt.co/bEq7\">make an account</a> on Typeform (yes, that's a referral link). Typeform has a <a href=\"http://helpcenter.typeform.com/hc/en-us/articles/200071986-Data-API\">Data API</a> which allows you to get the contents of your forms in JSON with this url:</p> <pre class=\"prettify\">https://api.typeform.com/v0/form/FormUID?key=ApiKey&amp;completed=true&amp;offset=0</pre> <p>The &amp;completed=true means you only want results from the form that are actually 100% complete. The &amp;offset is there since the API limits requests to 1,000 responses. So if you have over 1,000 emails signed up, it will only show the first 1,000. So we need to somehow paginate that later.</p> <p>Your Typeform form ID is <strong>not</strong> the one you find in the URL when you edit it in the admin panel:</p> <pre class=\"prettify\">https://admin.typeform.com/form/197596/fields/</pre> <p>It <strong>is</strong> the ID you find when users open your form though:</p> <pre class=\"prettify\">https://nomadlist.typeform.com/to/afaUYO</pre> <p>So the API URL becomes:</p> <pre class=\"prettify\">https://api.typeform.com/v0/form/afaUYO?key=5de631f0dd3&amp;completed=true';</pre> <h2>Inviting new sign ups on Slack</h2> <p>This is a bit more difficult. Slack has <a href=\"//api.slack.com/methods\">a great API</a>, but if you search for \"invite\", you only find these two methods:</p> <p><img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"></p><img src=\"/wp-content/uploads/2014/11/Screenshot-2014-11-23-14.39.18.png\"><br> <img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"/wp-content/uploads/2014/11/Screenshot-2014-11-23-14.39.09.png\"> <p>There's channels.invite and groups.invite, but we need a team.invite method. It's not there.</p> <p>So it ends here? No. Let's sniff the POST data when we invite people on Slack's web interface:</p> <img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"/wp-content/uploads/2014/11/xx2.png\"> <p>It posts data to this URL:</p> <pre class=\"prettify\">https://hashtagnomads.slack.com/api/users.admin.invite?t=1416723927</pre> <p>So <strong>users.admin.invite</strong> is an undocumented method. The ?t= is a simple <a href=\"http://en.wikipedia.org/wiki/Unix_time\">epoch</a> or unix time. The POST data is here:</p> <pre class=\"prettify\">email:example@example.com\nchannels:C02RWGV3X,C02S05WJA,C02SU0WLE,C02S2B5CH,C02RVB0CK,C02SPEMBY\nfirst_name:Example\ntoken:xoxs-255168432\nset_active:true\n_attempts:1</pre> <p>Most of this is obvious. How the hell was I going to get a token though? Since this wasn't the API anymore, it was the web interface. Right?</p> <p>I tried using the API token anyway. You can generate a token for your team on the <a href=\"//api.slack.com/\">Slack API</a> page:</p> <img class=\"sl_lazyimg\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"/wp-content/uploads/2014/11/Screenshot-2014-11-23-14.46.19.png\"> <p>I posted it and it returned:</p> <pre class=\"prettify'&gt;\n{\">\n<p>Yay! To my sheer surprise, this worked :)</p>\n<h2>Coding it up</h2>\n<p>Now let's make into a script that runs regularly to keep inviting new sign ups. Sorry it's PHP, I know. Life happens.</p>\n<p>First specify the config vars (don't worry I faked all the API keys and tokens in this post, you can stop tweeting me now haha!)</p>\n<pre class=\"prettyify\">\n// \n    date_default_timezone_set('America/Los_Angeles');\n    mb_internal_encoding(\"UTF-8\");\n\n    $typeformApiKey='5de631f0dd3';\n    $typeformFormId='afaUYO';\n    $typeformEmailField='textfield_2133129';\n    $typeformNameField='textfield_2133430';\n    $previouslyInvitedEmailsFile=__DIR__.'/previouslyInvitedEmails.json';\n\n    // your slack team/host name \n    $slackHostName='hashtagnomads';\n\n    // find this when checking the post at https://nomadslack.slack.com/admin/invites/full\n    $slackAutoJoinChannels='C02RWGV3X,C02S05WJA,C02SU0WLE,C02S2B5CH,C02RVB0CK,C02SPEMBY';\n    // generate token at https://api.slack.com/\n    $slackAuthToken='xoxp-2551684328';\n// \n</pre>\n<p>Your Typeform API key ($typeformApiKey) can be found <a href=\"https://admin.typeform.com/account\">here</a>:</p>\n<img class=\"sl_lazyimg\" src=\"https://levels.io/wp-content/plugins/simple-lazyload/blank_250x250.gif\"><img src=\"https://levels.io/wp-content/uploads/2014/11/Screenshot-2014-11-23-15.08.08.png\">\n<p>I mentioned above how to find your Typeform form ID ($typeformFormId).</p>\n<p>The rest is kinda obvious, $slackAuthToken is your API token. $slackAutoJoinChannels you can sniff from the POST call when you invite users through the web interface. That's the channels the ne user is invited into automatically. Remember if you remove a channel from Slack, but it will still be here, the invite will fail with \"Error: channel_not_found\".</p>\n<p>For the email and name field ID you need to do an API call first though:</p>\n<pre class=\"prettify&gt;\n$typeformEmailField='textfield_2133129';\n$typeformNameField='textfield_2133430';&lt;/pre&gt; &lt;img class=\" src=\"/wp-content/plugins/simple-lazyload/blank_250x250.gif\"></pre><img src=\"/wp-content/uploads/2014/11/Screenshot-2014-11-23-15.12.27.png\"> <p>The textfield_xxxxxxx value is the ID of the respective text field in your Typeform.</p> <p>We use a JSON text file to keep track of who we have invited already, to avoid useless API calls to Slack. This filename is specified in $previouslyInvitedEmailsFile. The ?offset= for the Typeform API uses the $previouslyInvitedEmails count and lets you only requests the new sign ups.</p> <p>We continue.</p> <pre class=\"prettify\">\n// \n    if(@!file_get_contents($previouslyInvitedEmailsFile)) {\n        $previouslyInvitedEmails=array();\n    }\n    else {\n        $previouslyInvitedEmails=json_decode(file_get_contents($previouslyInvitedEmailsFile),true);\n    }\n    $offset=count($previouslyInvitedEmails);\n\n    $typeformApiUrl='https://api.typeform.com/v0/form/'.$typeformFormId.'?key='.$typeformApiKey.'&amp;completed=true&amp;offset='.$offset;\n\n    if(!$typeformApiResponse=file_get_contents($typeformApiUrl)) {\n        echo \"Sorry, can't access API\";\n        exit;\n    }\n\n    $typeformData=json_decode($typeformApiResponse,true);\n\n    $usersToInvite=array();\n    foreach($typeformData['responses'] as $response) {\n        $user['email']=$response['answers'][$typeformEmailField];\n        $user['name']=$response['answers'][$typeformNameField];\n        if(!in_array($user['email'],$previouslyInvitedEmails)) {\n            array_push($usersToInvite,$user);\n        }\n    }\n// </pre> <p>We go through Typeform API's response to see which emails we already invited before and which are new. We save the new ones in $userToInvite.</p> <p>Then we hit Slack's API:</p> <pre class=\"prettify\">\n// \n    $slackInviteUrl='https://'.$slackHostName.'.slack.com/api/users.admin.invite?t='.time();\n\n    $i=1;\n    foreach($usersToInvite as $user) {\n        echo date('c').' - '.$i.' - '.\"\\\"\".$user['name'].\"\\\"  - Inviting to \".$slackHostName.\" Slack\\n\";\n\n        // \n            $fields = array(\n                'email' =&gt; urlencode($user['email']),\n                'channels' =&gt; urlencode($slackAutoJoinChannels),\n                'first_name' =&gt; urlencode($user['name']),\n                'token' =&gt; $slackAuthToken,\n                'set_active' =&gt; urlencode('true'),\n                '_attempts' =&gt; '1'\n            );\n\n            // url-ify the data for the POST\n                $fields_string='';\n                foreach($fields as $key=&gt;$value) { $fields_string .= $key.'='.$value.'&amp;'; }\n                rtrim($fields_string, '&amp;');\n\n            // open connection\n                $ch = curl_init();\n\n            // set the url, number of POST vars, POST data\n                curl_setopt($ch,CURLOPT_URL, $slackInviteUrl);\n                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n                curl_setopt($ch,CURLOPT_POST, count($fields));\n                curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n\n            // exec\n                $replyRaw = curl_exec($ch);\n                $reply=json_decode($replyRaw,true);\n                if($reply['ok']==false) {\n                    echo date('c').' - '.$i.' - '.\"\\\"\".$user['name'].\"\\\"  - \".'Error: '.$reply['error'].\"\\n\";\n                }\n                else {\n                    echo date('c').' - '.$i.' - '.\"\\\"\".$user['name'].\"\\\"  - \".'Invited successfully'.\"\\n\";\n                }\n\n            // close connection\n                curl_close($ch);\n\n                array_push($previouslyInvitedEmails,$user['email']);\n\n        // \n        $i++;\n    }\n// </pre> <p>The $fields array is an exact replica of the POST call Slack's web interface made before. The echo calls are simply to log everything and show me what's going on. If Slack's API replies ok=true, an invite has been successful. After each invite, we add the email to $previouslyInvitedEmails which we then save:</p> <pre class=\"prettify\">  file_put_contents($previouslyInvitedEmailsFile,json_encode($previouslyInvitedEmails));</pre> <p>I save this script as autoInviteFromTypeformToSlackWorker.php.</p> <h2>Run it</h2> <p>This is the output:</p> <pre class=\"prettify\">\n2014-11-23T08:14:19+00:00 - \"Austin\"  - Inviting to hashtagnomads Slack\n2014-11-23T08:14:21+00:00 - \"Austin\"  - Invited to hashtagnomads\n</pre> <h2>Scheduling the script</h2> <p>We want this script to run regularly to invite users as fast as possible.</p> <p>So I set a cron job to run every 30 minutes (*/30). And save the output to a text file to log.</p> <pre class=\"prettify\">*/30 * * * * php -f /srv/http/hashtagnomads.com/workers/autoInviteFromTypeformToSlackWorker.php &gt;&gt; /srv/http/hashtagnomads.com/logs/autoInviteFromTypeformToSlackWorker.txt</pre> <h2>Conclusion</h2> <p>That's it! It seems obvious and it is. But this small thing transforms Slack from a team chat into a community platform. Slack is awesome and it's already replacing email, hopefully now it can also replace horrible bulletin boards and help communities thrive, starting with <a href=\"http://hashtagnomads.com/?ref=levels.io\">#nomads</a></p> <p>Oh and, sorry for the PHP. I promise, Node.JS, one day... ^o^</p>  <p>P.S. I just wrote a book on bootstrapping indie startups called <a href=\"//makebook.io/\">MAKE</a>. And I'm now on <a href=\"//instagram.com/levelsio\">Instagram</a> and <a href=\"//twitter.com/levelsio\">Twitter</a> too if you'd like to follow more of my adventures. I don't use email so <a href=\"//twitter.com/levelsio\">tweet me</a> your questions. If you like what I'm doing, consider backing me on <a href=\"//www.patreon.com/levelsio\">Patreon</a>. </p><p></p> <a class=\"no-hover\" target=\"_blank\" href=\"//twitter.com/intent/tweet?text=How+I+hacked+Slack+into+a+community+platform+with+Typeform+@levelsio+https://levels.io/slack-typeform-auto-invite-sign-ups/\"><blockquote class=\"tweet-this-blockquote\"> How I hacked Slack into a community platform with Typeform</blockquote></a> <a target=\"_blank\" href=\"//twitter.com/intent/tweet?text=How+I+hacked+Slack+into+a+community+platform+with+Typeform+@levelsio+https://levels.io/slack-typeform-auto-invite-sign-ups/\" class=\"tweet-this-post\"><i class=\"fa fa-twitter\"></i>&#160;Tweet</a> <a target=\"_blank\" href=\"http://www.facebook.com/sharer/sharer.php?u=https://levels.io/slack-typeform-auto-invite-sign-ups/\" class=\"fb-this-post\"><i class=\"fa fa-facebook\"></i>&#160;Post</a> </pre></div>","title":"How I hacked Slack into a community platform with Typeform"}},"pageContext":{"id":"5b9248c287be056953db7be8"}}