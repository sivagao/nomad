{"data":{"mongodbDatabaseArticles":{"id":"5b93832b87be056953db7e34","content":"<div><h1 name=\"3bdc\" id=\"3bdc\" class=\"graf graf--h3 graf--leading graf--title\">HyperLog: Android Remote Logger Library for Debugging.</h1><p class=\"aspectRatioPlaceholder-fill\"></p><img class=\"graf-image\" src=\"https://cdn-images-1.medium.com/max/1600/1*yyv3K-X7us0w-CXA0Pg-Hg.png\"><p name=\"60e6\" id=\"60e6\" class=\"graf graf--p graf-after--figure\"><strong class=\"markup--strong markup--p-strong\">HyperLog A utility logger library for Android on top of standard Android Log class for debugging purpose.</strong></p><p name=\"01a9\" id=\"01a9\" class=\"graf graf--p graf-after--mixtapeEmbed\">It&#8217;s not easy to debug live mobile apps or library, or create every possible environment in which your end users use your app, given the variety of Android devices and variety of Android versions. It&#8217;s very difficult to replicate every possible configuration and reproduce every single bug that could possibly occur when millions of users use your app. During mobile app development, we often find that <strong class=\"markup--strong markup--p-strong\">logcat</strong> (for debugging) in Android Studio gets clear when an app reinstalls. However, this isn&#8217;t a good approach as you are going to be get lots of log statement in your logcat and logcat doesn&#8217;t maintain a history. Logging across multiple testing devices is hard.</p><p name=\"9bf1\" id=\"9bf1\" class=\"graf graf--p graf-after--p\">Mobile developers are mostly familiar with tools such as Google Analytics or Fabric.io but they are analytics or crashlytics systems, but not fully fledged logging solutions. Remote logging can be used to debug issues in both development and production. It makes debugging a much simpler and smoother process.</p><p name=\"b422\" id=\"b422\" class=\"graf graf--p graf-after--p\">At HyperTrack, logs are the medium through which HyperTrack SDK speaks with us. It gives us end-to-end visibility. It helps us to debug issues while developer/user, who is using the HyperTrack SDK, sits on the other side of the world. HyperTrack SDK pushes log to the HyperTrack server, and the HyperTrack server uses ELK stack to process the logs and visualize them on Kibana. We have discussed our logging approach in more detail in an <a href=\"https://www.hypertrack.com/blog/2017/02/10/centralized-logging-at-hypertrack/\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">earlier blog</a>.</p><p name=\"e763\" id=\"e763\" class=\"graf graf--p graf-after--p\">There are many Logger libraries available for developers, e.g., <a href=\"https://github.com/noveogroup/android-logger\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">Android-Logger</a> and <a href=\"https://github.com/JakeWharton/timber\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">Timber</a>. But these libraries print logs message on logcat in Android Studio that doesn&#8217;t help to get the behaviour of app in production, which means that these logs message aren&#8217;t accessible to the developers. Remote logging is the solution that helps to debug the problem. Remote logging the right set of information could provide valuable information that would be difficult to gather otherwise, and could help unveil unexpected behaviours and bugs. Remote Logging increases accountability and gives you confidence. When someone has experienced a use-case that you haven&#8217;t thought of, saying &#8220;We will investigate&#8221; is not great accountability. Saying &#8220;We have the logs and we know the exact line of code where the error occurred&#8221; is accountability.</p><h3 name=\"418b\" id=\"418b\" class=\"graf graf--h3 graf-after--p\">Introducing HyperLog</h3><p name=\"0875\" id=\"0875\" class=\"graf graf--p graf-after--h3\"><a href=\"https://github.com/hypertrack/hyper-log-android\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">HyperLog</a> is a utility logger library for Android on top of standard Android Log class for debugging purpose. This is a simple library that will allow Android apps or library to store log message into the database so that developer can pull the logs from the database into the file or push the logs to your server for debugging from the database as a file. The <a href=\"https://github.com/hypertrack/hyperlog-android/tree/master/hyperlog-demo\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">Demo App</a> will help you see the library in action.</p><p class=\"aspectRatioPlaceholder-fill\"></p><img class=\"graf-image\" src=\"https://cdn-images-1.medium.com/max/1600/1*Bc1E91q4BHUc_I1jH7bo_A.gif\"><h4 name=\"ede7\" id=\"ede7\" class=\"graf graf--h4 graf-after--figure\">Download</h4><p name=\"8bbb\" id=\"8bbb\" class=\"graf graf--p graf-after--h4\">The library is available on <a href=\"https://dl.bintray.com/piyushgupta27/maven/com/hypertrack/hyperlog/\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">mavenCentral()</a> and <a href=\"http://jcenter.bintray.com/com/hypertrack/hyperlog/\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">jcenter()</a>. In your app level <strong class=\"markup--strong markup--p-strong\">build.gradle</strong>, add the following code snippet and run the <strong class=\"markup--strong markup--p-strong\">gradle-sync</strong>. You can alternatively follow the steps as highlighted <a href=\"https://github.com/hypertrack/hyperlog-android#initialize\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">here</a>.</p><p class=\"aspectRatioPlaceholder-fill\"></p><p class=\"iframeContainer\"></p><p name=\"de4d\" id=\"de4d\" class=\"graf graf--p graf-after--figure\">Once this is done, you can start recording logs message and smartly push them to your server for debugging.</p><h4 name=\"72a2\" id=\"72a2\" class=\"graf graf--h4 graf-after--p\">Initialize and&#160;Usage</h4><p name=\"3fff\" id=\"3fff\" class=\"graf graf--p graf-after--h4\">Inside `onCreate` of Application class or Launcher Activity initialize the library.</p><p class=\"aspectRatioPlaceholder-fill\"></p><p class=\"iframeContainer\"></p><p class=\"aspectRatioPlaceholder-fill\"></p><p class=\"iframeContainer\"></p><h4 name=\"10af\" id=\"10af\" class=\"graf graf--h4 graf-after--figure\">Push Logs to the&#160;Server</h4><p name=\"8560\" id=\"8560\" class=\"graf graf--p graf-after--h4\">Developers can push logs to their server whenever they want. They can achieve this by multiple ways such as by pushing an FCM Notification to their app and when notification received then call <strong class=\"markup--strong markup--p-strong\">HyperLog.pushLogs</strong> or by creating a scheduled job and when job scheduled then call <strong class=\"markup--strong markup--p-strong\">HyperLog.pushLogs</strong> that will push a text file or gzip compressed file to your remote-server.</p><p name=\"b915\" id=\"b915\" class=\"graf graf--p graf-after--p\">Set the API Endpoint URL <strong class=\"markup--strong markup--p-strong\">HyperLog.setURL</strong> before calling <strong class=\"markup--strong markup--p-strong\">HyperLog.pushLogs </strong>method otherwise exception will be thrown.</p><p class=\"aspectRatioPlaceholder-fill\"></p><p class=\"iframeContainer\"></p><p name=\"93c8\" id=\"93c8\" class=\"graf graf--p graf-after--figure\">Have issues or feature requests? Use <a href=\"https://github.com/hypertrack/hyperlog-android/issues\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">issues tracker</a>. We&#8217;d love to see your pull requests, so send them in! Have questions, suggestions? Join the discussion on <a href=\"http://slack.hypertrack.io\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">slack</a>.</p><h4 name=\"e4be\" id=\"e4be\" class=\"graf graf--h4 graf-after--p\"><strong class=\"markup--strong markup--h4-strong\">Like what we are doing? Sign up to </strong><a href=\"https://www.hypertrack.com/\" class=\"markup--anchor markup--h4-anchor\" rel=\"noopener\" target=\"_blank\"><strong class=\"markup--strong markup--h4-strong\">HyperTrack</strong></a><strong class=\"markup--strong markup--h4-strong\"> and use building blocks for your location features!</strong></h4><p name=\"c6d5\" id=\"c6d5\" class=\"graf graf--p graf-after--mixtapeEmbed\"><strong class=\"markup--strong markup--p-strong\">Happy Downloading</strong></p><p class=\"aspectRatioPlaceholder-fill\"></p><p class=\"iframeContainer\"></p></div>","title":"HyperLog: Android Remote Logger Library for Debugging."}},"pageContext":{"id":"5b93832b87be056953db7e34"}}